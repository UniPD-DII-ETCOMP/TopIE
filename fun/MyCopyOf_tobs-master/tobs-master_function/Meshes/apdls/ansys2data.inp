!*******************************************************************************
!       ANSYS to DATA
!
!   Authors: Willian Vicente
!            Ricardo Luis A. Passalacqua    
!            Renato Pavanello 		
!******************************************************************************* 
allsel
NSEL,all
ESEL,all
!-------------------------------------------------------------------------------
! Limpando a memória das variáveis utilizadas 
*del,nmt
*del,nge 
*del,asp
*del,eltypec
*del,numbmat
*del,numbgeo
*del,elems
*del,pontos
*del,conect
*del,eletype
*del,allnodes
*del,coordsx
*del,coordsy
*del,coordsz
*del,nmat
*del,theta
*del,thik
*del,dsly
*del,dslx
*del,dslz
*del,dslU
*del,nFx
*del,nFy
*del,nFz
*del,nFU
!-------------------------------------------------------------------------------
! Obtendo o número de elementos
*get,nelem,ELEM,0,count
!-------------------------------------------------------------------------------
! Definição do vetor dos materiais
*dim,nmt,array,nelem,1
*dim,nge,array,nelem,1
nnmt=0
nnge=0
*do,i,1,nelem
  *GET,nmt(i,1),ELEM,i,ATTR,Mat            
  *if,nmt(i,1),gt,nnmt,then    
    nnmt=nmt(i,1)
  *endif    
*enddo      
!-------------------------------------------------------------------------------
!Montando o vetor dos números de elementos
*dim,eltypec,array,nelem,1   
*dim,numbmat,array,nelem,1
*dim,numbgeo,array,nelem,1
!-------------------------------------------------------------------------------
!Transformando em elementos equivalentes do MEFLAB
*do,i,1,nelem    
    *GET,eltypea,ELEM,i,ATTR,type
    *GET,eltypeb,ETYP,eltypea,ATTR,ENAM    
    *GET,numbmat(i),ELEM,i,ATTR,MAT
             
    *if,eltypeb,eq,42,then   
        eltypec(i,1)=2
    *endif                
    *if,eltypeb,eq,183,then
        eltypec(i,1)=3   
    *endif
    *if,eltypeb,eq,29,then
        *GET,kfsi,ETYP,eltypea,ATTR,KOP2
        *if,kfsi,eq,0,then
          eltypec(i,1)=6
        *endif
        *if,kfsi,eq,1,then
          eltypec(i,1)=4
        *endif        
    *endif 
    *if,eltypeb,eq,00,then
        eltypec(i,1)=5   
    *endif
    *if,eltypeb,eq,45,then
        eltypec(i,1)=8   
    *endif                                          
*enddo
!-------------------------------------------------------------------------------
!Obtendo o tipo de análise
*GET,AnaliseType,ACTIVE,0,ANTY
*IF,AnaliseType,EQ,0,THEN
  AnaliseTYpe=1
*ENDIF 
!-------------------------------------------------------------------------------    
!Gerando o vetor dos elementos
  *dim,elems,array,nelem,1
  *dim,pontos,array,1,12
!Matriz de incidencia
  *dim,conect,array,nelem,12
  *dim,eletype,array,nelem,1  
!Número de nós
  *get,nnode,NODE,0,count
!Vetor dos nós
  *dim,allnodes,array,nnode,1
!Coordenada x dos nós
  *dim,coordsx,array,nnode,1
!Coordenada y dos nós
  *dim,coordsy,array,nnode,1
!Coordenada z dos nós
  *dim,coordsz,array,nnode,1
!Definição do vetor dos materiais
  *dim,nmat,array,nnmt,9  
!-------------------------------------------------------------------------------  
! Matriz com as propriedades dos materiais
*do,i,1,nnmt
  nmat(i,1)=i
  *get,nmat(i,2),EX,i
  *get,nmat(i,3),DENS,i
  *get,nmat(i,4),PRXY,i
  *get,nmat(i,5),SONC,i  
*enddo
!-------------------------------------------------------------------------------
! Números dos nós
kj=0
*do,j,1,nnode
  kj=kj+1
  *get,Kcheck,node,kj,NSEL
  *if,kcheck,eq,1,then
  allnodes(j,1)=kj
  *endif
*enddo
!-------------------------------------------------------------------------------
! Coordenadas dos nós
*do,j,1,nnode
  *vget,pontos(1,1),node,allnodes(j),loc,x
  *vget,pontos(1,2),node,allnodes(j),loc,y
  *vget,pontos(1,3),node,allnodes(j),loc,z
  coordsx(j)=pontos(1,1)
  coordsy(j)=pontos(1,2)
  coordsz(j)=pontos(1,3)
*enddo
!-------------------------------------------------------------------------------
! Números dos elementos
kj=0
*do,j,1,nelem
  kj=kj+1
  *get,Kcheck,elem,kj,ESEL
  *if,kcheck,eq,1,then
  elems(j,1)=kj
  *endif
*enddo     
!-------------------------------------------------------------------------------
! Conectividade dos elementos
*do,j,1,nelem                               
  *if,eltypec(j,1),eq,2,then                
      *vget,pontos(1,1),elem,elems(j),node,1
      *vget,pontos(1,2),elem,elems(j),node,2
      *vget,pontos(1,3),elem,elems(j),node,3
      *vget,pontos(1,4),elem,elems(j),node,4                                    
       conect(j,1)=pontos(1,1)
       conect(j,2)=pontos(1,2)
       conect(j,3)=pontos(1,3)
       conect(j,4)=pontos(1,4)                               
  *endif                                        
  *if,eltypec(j,1),eq,3,then                      
      *vget,pontos(1,1),elem,elems(j),node,1
      *vget,pontos(1,2),elem,elems(j),node,2
      *vget,pontos(1,3),elem,elems(j),node,3
      *vget,pontos(1,4),elem,elems(j),node,4
      *vget,pontos(1,5),elem,elems(j),node,5
      *vget,pontos(1,6),elem,elems(j),node,6
      *vget,pontos(1,7),elem,elems(j),node,7
      *vget,pontos(1,8),elem,elems(j),node,8      
      conect(j,1)=pontos(1,1)
      conect(j,2)=pontos(1,2)
      conect(j,3)=pontos(1,3)
      conect(j,4)=pontos(1,4)
      conect(j,5)=pontos(1,5)
      conect(j,6)=pontos(1,6)
      conect(j,7)=pontos(1,7)
      conect(j,8)=pontos(1,8)                  
  *endif
  *if,eltypec(j,1),eq,4,then                
      *vget,pontos(1,1),elem,elems(j),node,1
      *vget,pontos(1,2),elem,elems(j),node,2
      *vget,pontos(1,3),elem,elems(j),node,3
      *vget,pontos(1,4),elem,elems(j),node,4                                    
      conect(j,1)=pontos(1,1)
      conect(j,2)=pontos(1,2)
      conect(j,3)=pontos(1,3)
      conect(j,4)=pontos(1,4)                               
  *endif
  *if,eltypec(j,1),eq,5,then                      
      *vget,pontos(1,1),elem,elems(j),node,1
      *vget,pontos(1,2),elem,elems(j),node,2
      *vget,pontos(1,3),elem,elems(j),node,3
      *vget,pontos(1,4),elem,elems(j),node,4
      *vget,pontos(1,5),elem,elems(j),node,5
      *vget,pontos(1,6),elem,elems(j),node,6
      *vget,pontos(1,7),elem,elems(j),node,7
      *vget,pontos(1,8),elem,elems(j),node,8      
      conect(j,1)=pontos(1,1)
      conect(j,2)=pontos(1,2)
      conect(j,3)=pontos(1,3)
      conect(j,4)=pontos(1,4)
      conect(j,5)=pontos(1,5)
      conect(j,6)=pontos(1,6)
      conect(j,7)=pontos(1,7)
      conect(j,8)=pontos(1,8)                  
  *endif
  *if,eltypec(j,1),eq,6,then                
      *vget,pontos(1,1),elem,elems(j),node,1
      *vget,pontos(1,2),elem,elems(j),node,2
      *vget,pontos(1,3),elem,elems(j),node,3
      *vget,pontos(1,4),elem,elems(j),node,4                                    
      conect(j,1)=pontos(1,1)
      conect(j,2)=pontos(1,2)
      conect(j,3)=pontos(1,3)
      conect(j,4)=pontos(1,4)                               
  *endif
    *if,eltypec(j,1),eq,8,then                      
      *vget,pontos(1,1),elem,elems(j),node,1
      *vget,pontos(1,2),elem,elems(j),node,2
      *vget,pontos(1,3),elem,elems(j),node,3
      *vget,pontos(1,4),elem,elems(j),node,4
      *vget,pontos(1,5),elem,elems(j),node,5
      *vget,pontos(1,6),elem,elems(j),node,6
      *vget,pontos(1,7),elem,elems(j),node,7
      *vget,pontos(1,8),elem,elems(j),node,8      
      conect(j,1)=pontos(1,1)
      conect(j,2)=pontos(1,2)
      conect(j,3)=pontos(1,3)
      conect(j,4)=pontos(1,4)
      conect(j,5)=pontos(1,5)
      conect(j,6)=pontos(1,6)
      conect(j,7)=pontos(1,7)
      conect(j,8)=pontos(1,8)                  
  *endif                    
*enddo   
!-------------------------------------------------------------------------------
! Bondary conditions
!-------------------------------------------------------------------------------
!Grau de liberdade x
kj=0
*do,j,1,nnode
  *get,dslcheck,node,j,D,UX
  *if,dslcheck,LT,1E30,then
    kj=kj+1  
  *endif    
*enddo                
*if,kj,gt,0,then
  *dim,dslx,array,kj,2
  kj=0
  *do,j,1,nnode
    *get,dslcheck,node,j,D,UX
    *if,dslcheck,LT,1E30,then
      kj=kj+1  
      dslx(kj,1)=j
      dslx(kj,2)=dslcheck
    *endif
  *enddo
*else
  *dim,dslx,array,1,2
    dslx(1,1)=0
    dslx(1,2)=0  
*endif
!-------------------------------------------------------------------------------
!Grau de liberdade y
kj=0
*do,j,1,nnode
  *get,dslcheck,node,j,D,UY
  *if,dslcheck,LT,1E30,then
    kj=kj+1  
  *endif
*enddo
*if,kj,gt,0,then
  *dim,dsly,array,kj,2
  kj=0
  *do,j,1,nnode
    *get,dslcheck,node,j,D,UY
    *if,dslcheck,LT,1E30,then
      kj=kj+1  
      dsly(kj,1)=j
      dsly(kj,2)=dslcheck
    *endif
  *enddo
*else
  *dim,dsly,array,1,2
    dsly(1,1)=0
    dsly(1,2)=0  
*endif
!-------------------------------------------------------------------------------
!Grau de liberdade Z
kj=0
*do,j,1,nnode
  *get,dslcheck,node,j,D,UZ
  *if,dslcheck,LT,1E30,then
    kj=kj+1  
  *endif
*enddo
*if,kj,gt,0,then
  *dim,dslz,array,kj,2
  kj=0
  *do,j,1,nnode
    *get,dslcheck,node,j,D,UZ
    *if,dslcheck,LT,1E30,then
      kj=kj+1  
      dslz(kj,1)=j
      dslz(kj,2)=dslcheck
    *endif
  *enddo
*else
  *dim,dslz,array,1,2
    dslz(1,1)=0
    dslz(1,2)=0  
*endif
!-------------------------------------------------------------------------------
!Grau de liberdade U
kj=0
*do,j,1,nnode
  *get,dslcheck,node,j,D,PRES
  *if,dslcheck,LT,1E30,then
    kj=kj+1  
  *endif
*enddo                
*if,kj,gt,0,then
  *dim,dslU,array,kj,2
  kj=0
  *do,j,1,nnode
    *get,dslcheck,node,j,D,PRES
    *if,dslcheck,LT,1E30,then
      kj=kj+1  
      dslU(kj,1)=j
      dslU(kj,2)=dslcheck
    *endif
  *enddo
*else
  *dim,dslU,array,1,2
    dslU(1,1)=0
    dslU(1,2)=0    
*endif
!-------------------------------------------------------------------------------
! Nodal Loads
!-------------------------------------------------------------------------------
!Grau de liberdade x
kj=0
cfx=0
*do,j,1,nnode
  *get,Fcheck,node,j,F,FX
  *if,Fcheck,ne,0,then
    cfx=cfx+1  
  *endif
*enddo
*if,cfx,ne,0,then
  *dim,nFx,array,cfx,2
  kj=0
  *do,j,1,nnode
    *get,Fcheck,node,j,F,FX
    *if,Fcheck,ne,0,then
      kj=kj+1  
      nFx(kj,1)=j
      nFx(kj,2)=Fcheck
    *endif
  *enddo
*else
  *dim,nFx,array,1,2
    nFx(1,1)=0
    nFx(1,2)=0  
*endif
!-------------------------------------------------------------------------------
!Grau de liberdade y
kj=0
cfy=0
*do,j,1,nnode
  *get,Fcheck,node,j,F,FY
  *if,Fcheck,ne,0,then
    cfy=cfy+1  
  *endif
*enddo
*if,cfy,ne,0,then
  *dim,nFy,array,cfy,2
  kj=0
  *do,j,1,nnode
    *get,Fcheck,node,j,F,FY
    *if,Fcheck,ne,0,then
      kj=kj+1  
      nFy(kj,1)=j
      nFy(kj,2)=Fcheck
    *endif
  *enddo
*else
  *dim,nFy,array,1,2
    nFy(1,1)=0
    nFy(1,2)=0  
*endif
!-------------------------------------------------------------------------------
!Grau de liberdade z
kj=0
cfz=0
*do,j,1,nnode
  *get,Fcheck,node,j,F,FZ
  *if,Fcheck,ne,0,then
    cfz=cfz+1  
  *endif
*enddo
*if,cfz,ne,0,then
  *dim,nFz,array,cfz,2
  kj=0
  *do,j,1,nnode
    *get,Fcheck,node,j,F,FZ
    *if,Fcheck,ne,0,then
      kj=kj+1  
      nFz(kj,1)=j
      nFz(kj,2)=Fcheck
    *endif
  *enddo
*else
  *dim,nFz,array,1,2
    nFz(1,1)=0
    nFz(1,2)=0  
*endif
!-------------------------------------------------------------------------------
!Grau de liberdade U
kj=0
cfu=0
*do,j,1,nnode
  *get,Fcheck,node,j,F,FLOW
  *if,Fcheck,ne,0,then
    cfu=cfu+1  
  *endif
*enddo
*if,cfu,ne,0,then
  *dim,nFU,array,cfu,2
  kj=0
  *do,j,1,nnode
    *get,Fcheck,node,j,F,FLOW
    *if,Fcheck,ne,0,then
      kj=kj+1  
      nFU(kj,1)=j
      nFU(kj,2)=Fcheck
    *endif
  *enddo
*else
  *dim,nFU,array,1,2
    nFU(1,1)=0
    nFU(1,2)=0    
*endif
!-------------------------------------------------------------------------------
! Escrevendo o arquivo de entrada para o "Acoustic" 
i=1
j=1
kj=1
                        
/output,arquivo,dat
  
!-------------------------------------------------------------------------------
! Número de nós
*vwrite,('nno'),nnode          
(A3,',',1x,F12.0)
!-------------------------------------------------------------------------------
! Número de elementos      
*vwrite,('nel'),nelem         
(A3,',',1x,F12.0)
!-------------------------------------------------------------------------------
! Número de propriedades geométricas
*vwrite,('nge'),1             
(A3,',',1x,F12.0)
!-------------------------------------------------------------------------------
! Área secção, Momento de inértia
*vwrite,('geo'),1,1,1,1       
(A3,',',1x,F12.0,',',E15.6,',',E15.6,',',E15.6)
!-------------------------------------------------------------------------------
! Número de propriedades dos materiais       
*vwrite,('nmt'),nnmt          
(A3,',',1x,F12.0)
!-------------------------------------------------------------------------------
! Módulo de Elast, Densidade, Poisson      
*vwrite,('mat'),nmat(i,1),nmat(i,2),nmat(i,3),nmat(i,4),nmat(i,5)  
(A3,',',1x,F12.0,',',E15.6,',',E15.6,',',E15.6,',',E15.6)
!-------------------------------------------------------------------------------
! Tipo de análise
*vwrite,('pty'),pty   
(A3,',',1x,F12.0)
!-------------------------------------------------------------------------------
! Tipo de matriz global                   
*vwrite,('sym'),sym            
(A3,',',1x,F12.0)
!-------------------------------------------------------------------------------
! Dimensão  
*vwrite,('dim'),dim            
(A3,',',1x,F12.0)          
!-------------------------------------------------------------------------------
*vwrite,('end')
(A3)
!-------------------------------------------------------------------------------                                                                                
! Coordenadas nodais                
*vwrite,'noh',allnodes(j),coordsx(j),coordsy(j),coordsz(j)
(A3,',',1x,F12.0,',',E17.8,',',E17.8',',E17.8)
!-------------------------------------------------------------------------------
! Matriz de incidência nodal
*vwrite,'ele',elems(kj),eltypec(kj,1),numbmat(kj),1,conect(kj,1),conect(kj,2),conect(kj,3),conect(kj,4),conect(kj,5),conect(kj,6),conect(kj,7),conect(kj,8) 
(A3,','F13.0,',',F13.0,',',F13.0,',',F13.0,',',F13.0,',',F13.0,',',F13.0,',',F13.0,',',F13.0,',',F13.0,',',F13.0,',',F13.0)
!-------------------------------------------------------------------------------
*vwrite,('end')
(A3)
!-------------------------------------------------------------------------------
! Escrevendo as condições de contorno
*vwrite,'dsl',dslx(kj,1),'UX',dslx(kj,2)
(A3,',',1x,F12.0,',',1x,A2,',',E12.2)
*vwrite,'dsl',dsly(kj,1),'UY',dsly(kj,2)
(A3,',',1x,F12.0,',',1x,A2,',',E12.2)
*vwrite,'dsl',dslz(kj,1),'UZ',dslz(kj,2)
(A3,',',1x,F12.0,',',1x,A2,',',E12.2)
*vwrite,'pre',dslU(kj,1),'PR',dslU(kj,2)
(A3,',',1x,F12.0,',',1x,A2,',',E12.2)
!-------------------------------------------------------------------------------
*vwrite,('end')
(A3)
!-------------------------------------------------------------------------------
!Aplicação da força
!Fx  Fy  Fz  P
*vwrite,'frc',nFx(kj,1),'FX',nFx(kj,2)
(A3,',',1x,F12.0,',',1x,A2,',',E12.2)
*vwrite,'frc',nFy(kj,1),'FY',nFy(kj,2)
(A3,',',1x,F12.0,',',1x,A2,',',E12.2)
*vwrite,'frc',nFz(kj,1),'FZ',nFz(kj,2)
(A3,',',1x,F12.0,',',1x,A2,',',E12.2)
*vwrite,'dpr',nFU(kj,1),'DP',nFU(kj,2)
(A3,',',1x,F12.0,',',1x,A2,',',E12.2)
!-------------------------------------------------------------------------------
*vwrite,('end')
(A3)       
*vwrite,par01,val01,par02,val02,par03,val03,par04,val04,par05,val05,par06,val06,par07,val07,par08,val08
       (A8,4X,F/,   A8,4X,F/,   A8,4X,F/,   A8,4X,F/,   A8,4X,F/,   A8,4X,F/,   A8,4X,F/,   A8,4X,F)
       
*vwrite,par09,val09,par10,val10,par11,val11,par12,val12,par13,val13
        (A8,4X,F/,  A8,4X,F/,   A8,4X,F/,   A8,4X,F/,   A8,4X,F/)
!-------------------------------------------------------------------------------
! Finaliza o programa de entrada
/output         
finish